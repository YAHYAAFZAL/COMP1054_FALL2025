* {
    box-sizing: border-box;
}

:root {
    --bg: #f8fafc;
    --text: #0f172a;
    --muted: #475569;
    --panel: #ffffff;
    --border: #e2e8f0;
    --accent: #2563eb;
    --accent-600: #1d4ed8;
    --gap: 1rem;
}

html,
body {
    margin: 0;
    background: var(--bg);
    color: var(--text);
    font: 16px/1.5 system-ui, -apple-system, Segoe UI, Roboto, Arial, sans-serif;
}

.container {
    max-width: 1100px;
    margin: 0 auto;
    padding: 1rem;
}

/* Header */
.site-header {
    border-bottom: 1px solid var(--border);
    background: var(--panel);
    /* Hint: this area should space the brand and nav apart and keep them aligned */
    display: flex;                    /* flexbox used here */
    justify-content: space-between;   /* push brand left, nav right */
    align-items: center;              /* keep everything centered vertically */
}

.brand-link {
    text-decoration: none;
    color: var(--text);
    font-weight: 700;
}

.top-nav {
    /* Hint: try arranging links in a row with some spacing */
    display: flex;        /* arrange links in a row */
    gap: 1rem;            /* space between links */
}

.nav-link {
    color: var(--muted);
    text-decoration: none;
    padding: 0.25rem 0.5rem;
}

.nav-link:hover,
.nav-link:focus {
    color: var(--text);
}

/* Hero */
.hero {
    /* Hint: consider a layout that stacks elements and centers them */
    display: flex;                  /* flexbox for vertical stacking */
    flex-direction: column;
    justify-content: center;
    align-items: center;
    text-align: center;
    padding: 3rem 1rem;
}

.hero .lead {
    color: var(--muted);
    max-width: 60ch;
    margin: 0.5rem auto 1rem;
}

.hero-actions {
    /* Hint: place these buttons side by side with a little gap */
    display: flex;      /* buttons side by side */
    gap: 1rem;          /* space between buttons */
}

.btn {
    border: 1px solid var(--border);
    background: #fff;
    color: var(--text);
    border-radius: 8px;
    padding: 0.6rem 1rem;
    cursor: pointer;
}

.btn.primary {
    background: var(--accent);
    border-color: var(--accent);
    color: #fff;
}

.btn.primary:hover {
    background: var(--accent-600);
    border-color: var(--accent-600);
}

.btn.small {
    padding: 0.4rem 0.75rem;
    font-size: 0.9rem;
}

/* Album grid */
.album {
    padding-top: 1rem;
    padding-bottom: 3rem;
}

.cards {
    /* Hint: think about letting these child cards wrap onto new lines */
    display: flex;          /* flex container for cards */
    flex-wrap: wrap;        /* allow wrapping onto new rows */
    gap: 1.5rem;            /* space between cards */
    justify-content: center;/* center cards in the row */
}

.card {
    background: var(--panel);
    border: 1px solid var(--border);
    border-radius: 12px;
    overflow: hidden;
    display: flex;
    flex-direction: column;
    /* Hint: flexible sizing here will control how many cards fit per row */
    flex: 1 1 300px;        /* flexible sizing: target ~300px wide */
    max-width: 320px;       /* keeps them from stretching too wide */
}

.thumb {
    background: #cbd5e1;
    height: 180px;
}

.card-body {
    display: flex;
    flex-direction: column;
    gap: 0.75rem;
    padding: 1rem;
    flex: 1; /* let body grow to fill space */
}

.card-actions {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    /* Hint: what could you do so this section always sits at the bottom? */
    margin-top: auto; /* pushes actions to the bottom */
}

.meta {
    color: var(--muted);
    margin-left: auto; /* pushes time text to far right */
}

/* Footer */
.site-footer {
    border-top: 1px solid var(--border);
    text-align: center;
    color: var(--muted);
    padding: 2rem 1rem 3rem;
}

.back-to-top {
    color: var(--accent);
    text-decoration: none;
}

.back-to-top:hover {
    text-decoration: underline;
}

/* Reflection 

1 – Which sections of the layout felt like a natural fit for Flexbox?  
Answer: The header and the hero section felt like the easiest spots to use Flexbox. 
It was simple to line up the brand and nav, and also center the hero content both 
vertically and horizontally. The buttons side by side were also very straightforward.  

2 – Which sections were workable with Flexbox, but felt a bit limited or could be improved?  
Answer: The card grid worked fine with Flexbox, but it took a bit of trial and error 
to get them wrapping neatly and staying about the same size. CSS Grid might have 
been easier for that part, but Flexbox still did the job once I figured out the flex-basis.  
*/
